{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maxim\\\\dev\\\\mesto-full\\\\frontend\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport ImagePopup from './ImagePopup.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { AppContext } from '../contexts/AppContext';\nimport auth from '../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoading, setIsLoading] = React.useState(false);\n  // Открытие и закрытие попапов\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [isLoggedIn, setLoggedIn] = React.useState(false);\n  const [email, setEmail] = React.useState('');\n  const navigate = useNavigate();\n  function setIsLogged() {\n    setLoggedIn(true);\n  }\n\n  // Проверяем токен\n  const checkTocken = () => {\n    auth.getContent().then(res => {\n      if (!res) {\n        return;\n      }\n      console.log(res);\n      setEmail(res.data.email);\n      setLoggedIn(true);\n      setCurrentUser(res);\n      navigate('/');\n    }).catch(err => {\n      setLoggedIn(false);\n      navigate('/signin');\n      console.error(err);\n    });\n  };\n  React.useEffect(() => {\n    checkTocken();\n    //eslint-disable-next-line\n  }, []);\n\n  // Обращение к api за данными пользователя и карточками\n  React.useEffect(() => {\n    if (isLoggedIn) {\n      api.getUserInfo().then(userInfo => {\n        setCurrentUser(userInfo);\n      }).catch(err => console.error(err));\n      api.getInitialCards().then(dataCards => {\n        setCards(dataCards.data);\n      }).catch(err => console.error(err));\n    }\n  }, [isLoggedIn]);\n\n  // Обработчики для компонентов попапов\n  // Общие\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i === currentUser.data._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard.data : c));\n    }).catch(err => console.error(err));\n  }\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      const filteredCards = cards.filter(newCard => newCard._id !== card._id);\n      setCards(filteredCards);\n    }).catch(err => console.error(err));\n  }\n  // Универсальная функция-обработчик\n  function handleSubmit(request) {\n    setIsLoading(true);\n    request().then(closeAllPopups).catch(console.error).finally(() => setIsLoading(false));\n  }\n  // Обработчик редактирования пользователя\n  function handleUpdateUser(data) {\n    function makeRequest() {\n      return api.editUserInfo(data).then(newData => {\n        setCurrentUser(newData.data);\n      });\n    }\n    handleSubmit(makeRequest);\n  }\n  // Обработчик аватара\n  function handleUpdateAvatar(data) {\n    function makeRequest() {\n      return api.editAvatar(data).then(setCurrentUser);\n    }\n    handleSubmit(makeRequest);\n  }\n  // Обработчик добавления карточки\n  function handleAddPlaceSubmit(data) {\n    function makeRequest() {\n      return api.postCard(data).then(newCard => {\n        setCards([newCard.data, ...cards]);\n      });\n    }\n    handleSubmit(makeRequest);\n  }\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({});\n  }\n  // Обработчик закрытия Esc\n  const isOpen = isEditAvatarPopupOpen || isEditProfilePopupOpen || isAddPlacePopupOpen || selectedCard.link;\n  React.useEffect(() => {\n    function closeByEscape(evt) {\n      if (evt.key === 'Escape') {\n        closeAllPopups();\n      }\n    }\n    if (isOpen) {\n      document.addEventListener('keydown', closeByEscape);\n      return () => {\n        document.removeEventListener('keydown', closeByEscape);\n      };\n    }\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          email: email,\n          setEmail: setEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n          value: {\n            isLoading,\n            closeAllPopups\n          },\n          children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n            value: currentUser,\n            children: [/*#__PURE__*/_jsxDEV(Routes, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: \"/signup\",\n                element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 48\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/signin\",\n                element: /*#__PURE__*/_jsxDEV(Login, {\n                  isLoggedIn: isLoggedIn,\n                  setIsLogged: setIsLogged,\n                  setEmail: setEmail\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/\",\n                element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n                  element: /*#__PURE__*/_jsxDEV(Main, {\n                    onEditProfile: () => setIsEditProfilePopupOpen(true),\n                    onAddPlace: () => setIsAddPlacePopupOpen(true),\n                    onEditAvatar: () => setIsEditAvatarPopupOpen(true),\n                    onCardClick: card => setSelectedCard(card),\n                    onCardLike: card => handleCardLike(card),\n                    onCardDelete: card => handleCardDelete(card),\n                    cards: cards\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 25\n                  }, this),\n                  isLoggedIn: isLoggedIn\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 21\n                }, this),\n                exact: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n              isOpen: isEditProfilePopupOpen,\n              onUpdateUser: handleUpdateUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n              isOpen: isAddPlacePopupOpen,\n              onAddPlace: handleAddPlaceSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n              isOpen: isEditAvatarPopupOpen,\n              onUpdateAvatar: handleUpdateAvatar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n              isOpen: selectedCard\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kkpC7CCeWojeNpFzXbzfT6Hg45c=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Route","Routes","useNavigate","Header","Main","api","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Login","Register","ProtectedRoute","ImagePopup","CurrentUserContext","AppContext","auth","jsxDEV","_jsxDEV","App","_s","isLoading","setIsLoading","useState","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","isLoggedIn","setLoggedIn","email","setEmail","navigate","setIsLogged","checkTocken","getContent","then","res","console","log","data","catch","err","error","useEffect","getUserInfo","userInfo","getInitialCards","dataCards","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","filteredCards","filter","handleSubmit","request","closeAllPopups","finally","handleUpdateUser","makeRequest","editUserInfo","newData","handleUpdateAvatar","editAvatar","handleAddPlaceSubmit","postCard","isOpen","link","closeByEscape","evt","key","document","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","path","element","onEditProfile","onAddPlace","onEditAvatar","onCardClick","onCardLike","onCardDelete","exact","onUpdateUser","onUpdateAvatar","_c","$RefreshReg$"],"sources":["C:/Users/Maxim/dev/mesto-full/frontend/src/components/App.js"],"sourcesContent":["import React from 'react';\r\nimport { Route, Routes, useNavigate } from 'react-router-dom';\r\nimport Header from './Header.js';\r\nimport Main from './Main.js';\r\nimport api from '../utils/api';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport ImagePopup from './ImagePopup.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport { AppContext } from '../contexts/AppContext';\r\nimport auth from '../utils/auth';\r\n\r\nfunction App() {\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  // Открытие и закрытие попапов\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState({});\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n  const [cards, setCards] = React.useState([]);\r\n  const [isLoggedIn, setLoggedIn] = React.useState(false);\r\n  const [email, setEmail] = React.useState('');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  function setIsLogged() {\r\n    setLoggedIn(true);\r\n  }\r\n\r\n  // Проверяем токен\r\n  const checkTocken = () => {\r\n    auth\r\n      .getContent()\r\n      .then((res) => {\r\n        if (!res) {\r\n          return;\r\n        }\r\n        console.log(res)\r\n        setEmail(res.data.email);\r\n        setLoggedIn(true);\r\n        setCurrentUser(res);\r\n        navigate('/');\r\n      })\r\n      .catch((err) => {\r\n        setLoggedIn(false);\r\n        navigate('/signin');\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    checkTocken();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  // Обращение к api за данными пользователя и карточками\r\n  React.useEffect(() => {\r\n    if (isLoggedIn) {\r\n      api\r\n        .getUserInfo()\r\n        .then((userInfo) => {\r\n          setCurrentUser(userInfo);\r\n        })\r\n        .catch((err) => console.error(err));\r\n\r\n      api\r\n        .getInitialCards()\r\n        .then((dataCards) => {\r\n          setCards(dataCards.data);\r\n        })\r\n        .catch((err) => console.error(err));\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  // Обработчики для компонентов попапов\r\n  // Общие\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some((i) => i === currentUser.data._id);\r\n\r\n    api\r\n      .changeLikeCardStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        setCards((state) => state.map((c) => (c._id === card._id ? newCard.data : c)));\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }\r\n  function handleCardDelete(card) {\r\n    api\r\n      .deleteCard(card._id)\r\n      .then(() => {\r\n        const filteredCards = cards.filter((newCard) => newCard._id !== card._id);\r\n        setCards(filteredCards);\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }\r\n  // Универсальная функция-обработчик\r\n  function handleSubmit(request) {\r\n    setIsLoading(true);\r\n    request()\r\n      .then(closeAllPopups)\r\n      .catch(console.error)\r\n      .finally(() => setIsLoading(false));\r\n  }\r\n  // Обработчик редактирования пользователя\r\n  function handleUpdateUser(data) {\r\n    function makeRequest() {\r\n      return api.editUserInfo(data).then((newData) => {\r\n        setCurrentUser(newData.data);\r\n      });\r\n    }\r\n    handleSubmit(makeRequest);\r\n  }\r\n  // Обработчик аватара\r\n  function handleUpdateAvatar(data) {\r\n    function makeRequest() {\r\n      return api.editAvatar(data).then(setCurrentUser);\r\n    }\r\n    handleSubmit(makeRequest);\r\n  }\r\n  // Обработчик добавления карточки\r\n  function handleAddPlaceSubmit(data) {\r\n    function makeRequest() {\r\n      return api.postCard(data).then((newCard) => {\r\n        setCards([newCard.data, ...cards]);\r\n      });\r\n    }\r\n    handleSubmit(makeRequest);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setSelectedCard({});\r\n  }\r\n  // Обработчик закрытия Esc\r\n  const isOpen =\r\n    isEditAvatarPopupOpen || isEditProfilePopupOpen || isAddPlacePopupOpen || selectedCard.link;\r\n\r\n  React.useEffect(() => {\r\n    function closeByEscape(evt) {\r\n      if (evt.key === 'Escape') {\r\n        closeAllPopups();\r\n      }\r\n    }\r\n    if (isOpen) {\r\n      document.addEventListener('keydown', closeByEscape);\r\n      return () => {\r\n        document.removeEventListener('keydown', closeByEscape);\r\n      };\r\n    }\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"root\">\r\n        <div className=\"page\">\r\n          <Header email={email} setEmail={setEmail} />\r\n          <AppContext.Provider value={{ isLoading, closeAllPopups }}>\r\n            <CurrentUserContext.Provider value={currentUser}>\r\n              <Routes>\r\n                <Route path=\"/signup\" element={<Register />} />\r\n                <Route\r\n                  path=\"/signin\"\r\n                  element={\r\n                    <Login isLoggedIn={isLoggedIn} setIsLogged={setIsLogged} setEmail={setEmail} />\r\n                  }\r\n                />\r\n                <Route\r\n                  path=\"/\"\r\n                  element={\r\n                    <ProtectedRoute\r\n                      element={\r\n                        <Main\r\n                          onEditProfile={() => setIsEditProfilePopupOpen(true)}\r\n                          onAddPlace={() => setIsAddPlacePopupOpen(true)}\r\n                          onEditAvatar={() => setIsEditAvatarPopupOpen(true)}\r\n                          onCardClick={(card) => setSelectedCard(card)}\r\n                          onCardLike={(card) => handleCardLike(card)}\r\n                          onCardDelete={(card) => handleCardDelete(card)}\r\n                          cards={cards}\r\n                        />\r\n                      }\r\n                      isLoggedIn={isLoggedIn}\r\n                    />\r\n                  }\r\n                  exact\r\n                />\r\n              </Routes>\r\n              <EditProfilePopup isOpen={isEditProfilePopupOpen} onUpdateUser={handleUpdateUser} />\r\n              <AddPlacePopup isOpen={isAddPlacePopupOpen} onAddPlace={handleAddPlaceSubmit} />\r\n              <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onUpdateAvatar={handleUpdateAvatar} />\r\n              <ImagePopup isOpen={selectedCard} />\r\n            </CurrentUserContext.Provider>\r\n          </AppContext.Provider>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}