{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maxim\\\\dev\\\\react-mesto-auth\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { BrowserRouter, Route, Routes, useNavigate } from \"react-router-dom\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport api from \"../utils/api\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { AppContext } from \"../contexts/AppContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoading, setIsLoading] = React.useState(false);\n  // Открытие и закрытие попапов\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [isLoggedIn, setloggedIn] = React.useState(false);\n  const navigate = useNavigate();\n  function setIsLogged() {\n    setloggedIn(true);\n  }\n\n  // Проверяем токен\n  const checkTocken = () => {\n    auth.getContent(localStorage.getItem(\"jwt\")).then(res => {\n      if (!data) {\n        return;\n      }\n      navigate(\"/\");\n    }).catch(err => console.error(err));\n  };\n\n  // Обращение к api за данными пользователя и карточками\n  React.useEffect(() => {\n    api.getUserInfo().then(userInfo => {\n      setCurrentUser(userInfo);\n    }).catch(err => console.error(err));\n    api.getInitialCards().then(dataCards => {\n      setCards(dataCards);\n    }).catch(err => console.error(err));\n  }, []);\n\n  // Обработчики для компонентов попапов\n  // Общие\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => console.error(err));\n  }\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      const filteredCards = cards.filter(newCard => newCard._id !== card._id);\n      setCards(filteredCards);\n    }).catch(err => console.error(err));\n  }\n  // Универсальная функция-обработчик\n  function handleSubmit(request) {\n    setIsLoading(true);\n    request().then(closeAllPopups).catch(console.error).finally(() => setIsLoading(false));\n  }\n  // Обработчик редактирования пользователя\n  function handleUpdateUser(data) {\n    function makeRequest() {\n      return api.editUserInfo(data).then(setCurrentUser);\n    }\n    handleSubmit(makeRequest);\n  }\n  // Обработчик аватара\n  function handleUpdateAvatar(data) {\n    function makeRequest() {\n      return api.editAvatar(data).then(setCurrentUser);\n    }\n    handleSubmit(makeRequest);\n  }\n  // Обработчик добавления карточки\n  function handleAddPlaceSubmit(data) {\n    function makeRequest() {\n      return api.postCard(data).then(newCard => {\n        setCards([newCard, ...cards]);\n      });\n    }\n    handleSubmit(makeRequest);\n  }\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({});\n  }\n  // Обработчик закрытия Esc\n  const isOpen = isEditAvatarPopupOpen || isEditProfilePopupOpen || isAddPlacePopupOpen || selectedCard.link;\n  React.useEffect(() => {\n    function closeByEscape(evt) {\n      if (evt.key === \"Escape\") {\n        closeAllPopups();\n      }\n    }\n    if (isOpen) {\n      document.addEventListener(\"keydown\", closeByEscape);\n      return () => {\n        document.removeEventListener(\"keydown\", closeByEscape);\n      };\n    }\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"root\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n            value: {\n              isLoading,\n              closeAllPopups\n            },\n            children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n              value: currentUser,\n              children: [/*#__PURE__*/_jsxDEV(Routes, {\n                children: [/*#__PURE__*/_jsxDEV(Route, {\n                  path: \"/signup\",\n                  element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 50\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Route, {\n                  path: \"/signin\",\n                  element: /*#__PURE__*/_jsxDEV(Login, {\n                    isLoggedIn: isLoggedIn,\n                    setIsLogged: setIsLogged\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 30\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Route, {\n                  path: \"/\",\n                  element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n                    element: /*#__PURE__*/_jsxDEV(Main, {\n                      onEditProfile: () => setIsEditProfilePopupOpen(true),\n                      onAddPlace: () => setIsAddPlacePopupOpen(true),\n                      onEditAvatar: () => setIsEditAvatarPopupOpen(true),\n                      onCardClick: card => setSelectedCard(card),\n                      onCardLike: card => handleCardLike(card),\n                      onCardDelete: card => handleCardDelete(card),\n                      cards: cards\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 27\n                    }, this),\n                    isLoggedIn: isLoggedIn\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 23\n                  }, this),\n                  exact: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n                isOpen: isEditProfilePopupOpen,\n                onUpdateUser: handleUpdateUser\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n                isOpen: isAddPlacePopupOpen,\n                onAddPlace: handleAddPlaceSubmit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n                isOpen: isEditAvatarPopupOpen,\n                onUpdateAvatar: handleUpdateAvatar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n                isOpen: selectedCard\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tYXIaH1427AMHNh0ejqz256RSY8=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Route","Routes","useNavigate","Header","Main","api","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Login","Register","ProtectedRoute","ImagePopup","CurrentUserContext","AppContext","jsxDEV","_jsxDEV","App","_s","isLoading","setIsLoading","useState","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","isLoggedIn","setloggedIn","navigate","setIsLogged","checkTocken","auth","getContent","localStorage","getItem","then","res","data","catch","err","console","error","useEffect","getUserInfo","userInfo","getInitialCards","dataCards","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","filteredCards","filter","handleSubmit","request","closeAllPopups","finally","handleUpdateUser","makeRequest","editUserInfo","handleUpdateAvatar","editAvatar","handleAddPlaceSubmit","postCard","isOpen","link","closeByEscape","evt","key","document","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","path","element","onEditProfile","onAddPlace","onEditAvatar","onCardClick","onCardLike","onCardDelete","exact","onUpdateUser","onUpdateAvatar","_c","$RefreshReg$"],"sources":["C:/Users/Maxim/dev/react-mesto-auth/src/components/App.js"],"sourcesContent":["import React from \"react\";\nimport { BrowserRouter, Route, Routes, useNavigate } from \"react-router-dom\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport api from \"../utils/api\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { AppContext } from \"../contexts/AppContext\";\n\nfunction App() {\n  const [isLoading, setIsLoading] = React.useState(false);\n  // Открытие и закрытие попапов\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [isLoggedIn, setloggedIn] = React.useState(false);\n  const navigate = useNavigate();\n\n  function setIsLogged() {\n    setloggedIn(true);\n  }\n\n  // Проверяем токен\n  const checkTocken = () => {\n    auth\n      .getContent(localStorage.getItem(\"jwt\"))\n      .then((res) => {\n        if (!data) {\n          return;\n        }\n        navigate(\"/\");\n      })\n      .catch((err) => console.error(err));\n  };\n\n  // Обращение к api за данными пользователя и карточками\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then((userInfo) => {\n        setCurrentUser(userInfo);\n      })\n      .catch((err) => console.error(err));\n\n    api\n      .getInitialCards()\n      .then((dataCards) => {\n        setCards(dataCards);\n      })\n      .catch((err) => console.error(err));\n  }, []);\n\n  // Обработчики для компонентов попапов\n  // Общие\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    api\n      .changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\n      })\n      .catch((err) => console.error(err));\n  }\n  function handleCardDelete(card) {\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        const filteredCards = cards.filter((newCard) => newCard._id !== card._id);\n        setCards(filteredCards);\n      })\n      .catch((err) => console.error(err));\n  }\n  // Универсальная функция-обработчик\n  function handleSubmit(request) {\n    setIsLoading(true);\n    request()\n      .then(closeAllPopups)\n      .catch(console.error)\n      .finally(() => setIsLoading(false));\n  }\n  // Обработчик редактирования пользователя\n  function handleUpdateUser(data) {\n    function makeRequest() {\n      return api.editUserInfo(data).then(setCurrentUser);\n    }\n    handleSubmit(makeRequest);\n  }\n  // Обработчик аватара\n  function handleUpdateAvatar(data) {\n    function makeRequest() {\n      return api.editAvatar(data).then(setCurrentUser);\n    }\n    handleSubmit(makeRequest);\n  }\n  // Обработчик добавления карточки\n  function handleAddPlaceSubmit(data) {\n    function makeRequest() {\n      return api.postCard(data).then((newCard) => {\n        setCards([newCard, ...cards]);\n      });\n    }\n    handleSubmit(makeRequest);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({});\n  }\n  // Обработчик закрытия Esc\n  const isOpen =\n    isEditAvatarPopupOpen || isEditProfilePopupOpen || isAddPlacePopupOpen || selectedCard.link;\n\n  React.useEffect(() => {\n    function closeByEscape(evt) {\n      if (evt.key === \"Escape\") {\n        closeAllPopups();\n      }\n    }\n    if (isOpen) {\n      document.addEventListener(\"keydown\", closeByEscape);\n      return () => {\n        document.removeEventListener(\"keydown\", closeByEscape);\n      };\n    }\n  }, [isOpen]);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <div className=\"root\">\n          <div className=\"page\">\n            <Header />\n            <AppContext.Provider value={{ isLoading, closeAllPopups }}>\n              <CurrentUserContext.Provider value={currentUser}>\n                <Routes>\n                  <Route path=\"/signup\" element={<Register />} />\n                  <Route\n                    path=\"/signin\"\n                    element={<Login isLoggedIn={isLoggedIn} setIsLogged={setIsLogged} />}\n                  />\n                  <Route\n                    path=\"/\"\n                    element={\n                      <ProtectedRoute\n                        element={\n                          <Main\n                            onEditProfile={() => setIsEditProfilePopupOpen(true)}\n                            onAddPlace={() => setIsAddPlacePopupOpen(true)}\n                            onEditAvatar={() => setIsEditAvatarPopupOpen(true)}\n                            onCardClick={(card) => setSelectedCard(card)}\n                            onCardLike={(card) => handleCardLike(card)}\n                            onCardDelete={(card) => handleCardDelete(card)}\n                            cards={cards}\n                          />\n                        }\n                        isLoggedIn={isLoggedIn}\n                      />\n                    }\n                    exact\n                  />\n                </Routes>\n                <EditProfilePopup isOpen={isEditProfilePopupOpen} onUpdateUser={handleUpdateUser} />\n                <AddPlacePopup isOpen={isAddPlacePopupOpen} onAddPlace={handleAddPlaceSubmit} />\n                <EditAvatarPopup\n                  isOpen={isEditAvatarPopupOpen}\n                  onUpdateAvatar={handleUpdateAvatar}\n                />\n                <ImagePopup isOpen={selectedCard} />\n              </CurrentUserContext.Provider>\n            </AppContext.Provider>\n          </div>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}