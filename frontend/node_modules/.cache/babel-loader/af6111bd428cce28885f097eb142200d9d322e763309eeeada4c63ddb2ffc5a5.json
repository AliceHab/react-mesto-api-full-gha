{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n  editUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(res => this._checkResponse(res));\n  }\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n  postCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      }),\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n  editAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(res => this._checkResponse(res));\n  }\n  like(cardID) {\n    return fetch(`${this._baseUrl}/cards/${cardID}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n  deleteLike(cardID) {\n    return fetch(`${this._baseUrl}/cards/${cardID}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n  deleteCard(cardID) {\n    return fetch(`${this._baseUrl}/cards/${cardID}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-65\",\n  headers: {\n    authorization: \"2123c628-f1b5-4ce0-be41-8740d5e266d9\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","_ref","baseUrl","headers","_baseUrl","_headers","_checkResponse","res","ok","json","Promise","reject","status","getUserInfo","fetch","then","editUserInfo","data","method","body","JSON","stringify","name","about","getInitialCards","postCard","link","editAvatar","avatar","like","cardID","deleteLike","deleteCard","api","authorization"],"sources":["C:/Users/Maxim/dev/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    }).then((res) => this._checkResponse(res));\n  }\n\n  editUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    }).then((res) => this._checkResponse(res));\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    }).then((res) => this._checkResponse(res));\n  }\n\n  postCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link,\n      }),\n      headers: this._headers,\n    }).then((res) => this._checkResponse(res));\n  }\n\n  editAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar,\n      }),\n    }).then((res) => this._checkResponse(res));\n  }\n\n  like(cardID) {\n    return fetch(`${this._baseUrl}/cards/${cardID}/likes`, {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then((res) => this._checkResponse(res));\n  }\n\n  deleteLike(cardID) {\n    return fetch(`${this._baseUrl}/cards/${cardID}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => this._checkResponse(res));\n  }\n\n  deleteCard(cardID) {\n    return fetch(`${this._baseUrl}/cards/${cardID}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => this._checkResponse(res));\n  }\n}\n\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-65\",\n  headers: {\n    authorization: \"2123c628-f1b5-4ce0-be41-8740d5e266d9\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}