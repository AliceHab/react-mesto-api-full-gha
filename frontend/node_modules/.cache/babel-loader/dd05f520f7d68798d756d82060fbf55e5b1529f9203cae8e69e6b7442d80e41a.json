{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  _request(url, options) {\n    return fetch(url, options).then(this._checkResponse);\n  }\n  registerUser(password, email) {\n    console.log(password, email);\n    return this._request(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        password: password,\n        email: email\n      })\n    });\n  }\n  editUserInfo(data) {\n    return this._request(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    });\n  }\n  getInitialCards() {\n    return this._request(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    });\n  }\n  postCard(data) {\n    return this._request(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      }),\n      headers: this._headers\n    });\n  }\n  editAvatar(data) {\n    return this._request(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    });\n  }\n  like(cardID) {\n    return this._request(`${this._baseUrl}/cards/${cardID}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    });\n  }\n  deleteLike(cardID) {\n    return this._request(`${this._baseUrl}/cards/${cardID}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    });\n  }\n  deleteCard(cardID) {\n    return this._request(`${this._baseUrl}/cards/${cardID}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    });\n  }\n  changeLikeCardStatus(cardID, isLiked) {\n    if (isLiked) {\n      return this.like(cardID);\n    } else {\n      return this.deleteLike(cardID);\n    }\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://auth.nomoreparties.co\",\n  headers: {\n    authorization: \"2123c628-f1b5-4ce0-be41-8740d5e266d9\"\n    // \"Content-Type\": \"application/json\",\n  }\n});\n\nexport default api;","map":{"version":3,"names":["Api","constructor","_ref","baseUrl","headers","_baseUrl","_headers","_checkResponse","res","ok","json","Promise","reject","status","_request","url","options","fetch","then","registerUser","password","email","console","log","method","body","JSON","stringify","editUserInfo","data","name","about","getInitialCards","postCard","link","editAvatar","avatar","like","cardID","deleteLike","deleteCard","changeLikeCardStatus","isLiked","api","authorization"],"sources":["C:/Users/Maxim/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["class Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n  _request(url, options) {\r\n    return fetch(url, options).then(this._checkResponse);\r\n  }\r\n\r\n  registerUser(password, email) {\r\n    console.log(password, email);\r\n    return this._request(`${this._baseUrl}/signup`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        password: password,\r\n        email: email,\r\n      }),\r\n    });\r\n  }\r\n\r\n  editUserInfo(data) {\r\n    return this._request(`${this._baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about,\r\n      }),\r\n    });\r\n  }\r\n\r\n  getInitialCards() {\r\n    return this._request(`${this._baseUrl}/cards`, {\r\n      headers: this._headers,\r\n    });\r\n  }\r\n\r\n  postCard(data) {\r\n    return this._request(`${this._baseUrl}/cards`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link,\r\n      }),\r\n      headers: this._headers,\r\n    });\r\n  }\r\n\r\n  editAvatar(data) {\r\n    return this._request(`${this._baseUrl}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data.avatar,\r\n      }),\r\n    });\r\n  }\r\n\r\n  like(cardID) {\r\n    return this._request(`${this._baseUrl}/cards/${cardID}/likes`, {\r\n      method: \"PUT\",\r\n      headers: this._headers,\r\n    });\r\n  }\r\n\r\n  deleteLike(cardID) {\r\n    return this._request(`${this._baseUrl}/cards/${cardID}/likes`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    });\r\n  }\r\n\r\n  deleteCard(cardID) {\r\n    return this._request(`${this._baseUrl}/cards/${cardID}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    });\r\n  }\r\n\r\n  changeLikeCardStatus(cardID, isLiked) {\r\n    if (isLiked) {\r\n      return this.like(cardID);\r\n    } else {\r\n      return this.deleteLike(cardID);\r\n    }\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: \"https://auth.nomoreparties.co\",\r\n  headers: {\r\n    authorization: \"2123c628-f1b5-4ce0-be41-8740d5e266d9\",\r\n    // \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport default api;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}