{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  _request(url, options) {\n    return fetch(url, options).then(this._checkResponse);\n  }\n  getUserInfo() {\n    _request(`${this._baseUrl}/users/me`);\n    // return fetch(`${this._baseUrl}/users/me`, {\n    //   headers: this._headers,\n    // }).then((res) => this._checkResponse(res));\n  }\n\n  editUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(res => this._checkResponse(res));\n  }\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n  postCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: data.name.name,\n        link: data.link.link\n      }),\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n  editAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(res => this._checkResponse(res));\n  }\n  like(cardID) {\n    return fetch(`${this._baseUrl}/cards/${cardID}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n  deleteLike(cardID) {\n    return fetch(`${this._baseUrl}/cards/${cardID}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n  deleteCard(cardID) {\n    return fetch(`${this._baseUrl}/cards/${cardID}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n  changeLikeCardStatus(cardID, isLiked) {\n    if (isLiked) {\n      return this.like(cardID);\n    } else {\n      return this.deleteLike(cardID);\n    }\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-65\",\n  headers: {\n    authorization: \"2123c628-f1b5-4ce0-be41-8740d5e266d9\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","_ref","baseUrl","headers","_baseUrl","_headers","_checkResponse","res","ok","json","Promise","reject","status","_request","url","options","fetch","then","getUserInfo","editUserInfo","data","method","body","JSON","stringify","name","about","getInitialCards","postCard","link","editAvatar","avatar","like","cardID","deleteLike","deleteCard","changeLikeCardStatus","isLiked","api","authorization"],"sources":["C:/Users/Maxim/dev/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n  _request(url, options) {\r\n    return fetch(url, options).then(this._checkResponse);\r\n  }\r\n\r\n  getUserInfo() {\r\n    _request(`${this._baseUrl}/users/me`);\r\n    // return fetch(`${this._baseUrl}/users/me`, {\r\n    //   headers: this._headers,\r\n    // }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  editUserInfo(data) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about,\r\n      }),\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      headers: this._headers,\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  postCard(data) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        name: data.name.name,\r\n        link: data.link.link,\r\n      }),\r\n      headers: this._headers,\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  editAvatar(data) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data.avatar,\r\n      }),\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  like(cardID) {\r\n    return fetch(`${this._baseUrl}/cards/${cardID}/likes`, {\r\n      method: \"PUT\",\r\n      headers: this._headers,\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  deleteLike(cardID) {\r\n    return fetch(`${this._baseUrl}/cards/${cardID}/likes`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  deleteCard(cardID) {\r\n    return fetch(`${this._baseUrl}/cards/${cardID}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  changeLikeCardStatus(cardID, isLiked) {\r\n    if (isLiked) {\r\n      return this.like(cardID);\r\n    } else {\r\n      return this.deleteLike(cardID);\r\n    }\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-65\",\r\n  headers: {\r\n    authorization: \"2123c628-f1b5-4ce0-be41-8740d5e266d9\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport default api;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}