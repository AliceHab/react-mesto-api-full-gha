{"ast":null,"code":"class Auth {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  _request(url, options) {\n    return fetch(url, options).then(this._checkResponse);\n  }\n  registerUser(password, email) {\n    return this._request(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        password,\n        email\n      }),\n      credentials: 'include'\n    });\n  }\n  loginUser(password, email) {\n    return this._request(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        password,\n        email\n      }),\n      credentials: 'include'\n    });\n  }\n\n  // getContent() {\n  //   return this._request(`${this._baseUrl}/users/me`, {\n  //     method: \"GET\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     credentials: 'include',\n  //   });\n  // }\n}\n\nconst auth = new Auth({\n  baseUrl: \"http://localhost:4000\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  },\n  credentials: 'include'\n});\nexport default auth;","map":{"version":3,"names":["Auth","constructor","_ref","baseUrl","headers","_baseUrl","_headers","_checkResponse","res","ok","json","Promise","reject","status","_request","url","options","fetch","then","registerUser","password","email","method","body","JSON","stringify","credentials","loginUser","auth"],"sources":["C:/Users/Maxim/dev/mesto-full/frontend/src/utils/auth.js"],"sourcesContent":["class Auth {\r\n  constructor({ baseUrl, headers }) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n  _request(url, options) {\r\n    return fetch(url, options).then(this._checkResponse);\r\n  }\r\n\r\n  registerUser(password, email) {\r\n    return this._request(`${this._baseUrl}/signup`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({ password, email }),\r\n      credentials: 'include',\r\n    });\r\n  }\r\n\r\n  loginUser(password, email) {\r\n    return this._request(`${this._baseUrl}/signin`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({ password, email }),\r\n      credentials: 'include',\r\n    });\r\n  }\r\n\r\n  // getContent() {\r\n  //   return this._request(`${this._baseUrl}/users/me`, {\r\n  //     method: \"GET\",\r\n  //     headers: {\r\n  //       \"Content-Type\": \"application/json\",\r\n  //     },\r\n  //     credentials: 'include',\r\n  //   });\r\n  // }\r\n}\r\n\r\nconst auth = new Auth({\r\n  baseUrl: \"http://localhost:4000\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n  credentials: 'include',\r\n});\r\n\r\nexport default auth;\r\n"],"mappings":"AAAA,MAAMA,IAAI,CAAC;EACTC,WAAWA,CAAAC,IAAA,EAAuB;IAAA,IAAtB;MAAEC,OAAO;MAAEC;IAAQ,CAAC,GAAAF,IAAA;IAC9B,IAAI,CAACG,QAAQ,GAAGF,OAAO;IACvB,IAAI,CAACG,QAAQ,GAAGF,OAAO;EACzB;EAEAG,cAAcA,CAACC,GAAG,EAAE;IAClB,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACnB;IAEA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;EAChD;EAEAC,QAAQA,CAACC,GAAG,EAAEC,OAAO,EAAE;IACrB,OAAOC,KAAK,CAACF,GAAG,EAAEC,OAAO,CAAC,CAACE,IAAI,CAAC,IAAI,CAACX,cAAc,CAAC;EACtD;EAEAY,YAAYA,CAACC,QAAQ,EAAEC,KAAK,EAAE;IAC5B,OAAO,IAAI,CAACP,QAAQ,CAAE,GAAE,IAAI,CAACT,QAAS,SAAQ,EAAE;MAC9CiB,MAAM,EAAE,MAAM;MACdlB,OAAO,EAAE,IAAI,CAACE,QAAQ;MACtBiB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEL,QAAQ;QAAEC;MAAM,CAAC,CAAC;MACzCK,WAAW,EAAE;IACf,CAAC,CAAC;EACJ;EAEAC,SAASA,CAACP,QAAQ,EAAEC,KAAK,EAAE;IACzB,OAAO,IAAI,CAACP,QAAQ,CAAE,GAAE,IAAI,CAACT,QAAS,SAAQ,EAAE;MAC9CiB,MAAM,EAAE,MAAM;MACdlB,OAAO,EAAE,IAAI,CAACE,QAAQ;MACtBiB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEL,QAAQ;QAAEC;MAAM,CAAC,CAAC;MACzCK,WAAW,EAAE;IACf,CAAC,CAAC;EACJ;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;;AAEA,MAAME,IAAI,GAAG,IAAI5B,IAAI,CAAC;EACpBG,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDsB,WAAW,EAAE;AACf,CAAC,CAAC;AAEF,eAAeE,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}